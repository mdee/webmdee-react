{"version":3,"sources":["campaign-data.gif","reviewsage.gif","recording.gif","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","chartTimeFormat","d3TimeFormat","Dashboard","addDollarSign","spendRange","spendRangeSplit","split","length","secondSplit","concat","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","formControl","margin","minWidth","selectEmpty","marginTop","menuButton","marginRight","title","drawer","width","pickerTimeFormat","initialDateString","Date","spendRanges","adTypes","adSpendImpressionRangeColorScale","d3Scale","domain","range","d3ScaleChromatic","adTypeColorScale","_useState","useState","_useState2","Object","slicedToArray","presidentialCampaigns","setPresidentialCampaigns","_useState3","_useState4","presidentialCampaign","setPresidentialCampaign","_useState5","_useState6","startDate","setStartDate","_useState7","_useState8","endDate","setEndDate","_useState9","_useState10","minDate","setMinDate","_useState11","_useState12","maxDate","setMaxDate","_useState13","_useState14","showSpendRanges","setShowSpendRanges","_useState15","_useState16","showImpressionRanges","setShowImpressionRanges","_useState17","_useState18","showAdTypes","setShowAdTypes","_useState19","_useState20","barSize","setBarSize","_useState21","_useState22","adType","setAdType","_useState23","_useState24","ads","setAds","_useState25","_useState26","adDetailsPage","setAdDetailsPage","_useState27","_useState28","fetchIndividualDonations","setFetchIndividualDonations","_useState29","_useState30","fetchAdDetails","setFetchAdDetails","_useState31","_useState32","snackbarOpen","setSnackbarOpen","_useState33","_useState34","drawerOpen","setDrawerOpen","_useState35","_useState36","helpDialogOpen","setHelpDialogOpen","_useState37","_useState38","dateAdStackedBars","setDateAdStackedBars","_useState39","_useState40","donationDataStackedBars","setDonationDataStackedBars","_useState41","_useState42","invalidBarSize","setInvalidBarSize","_useState43","_useState44","noDonations","setNoDonations","_useState45","_useState46","loading","setLoading","handleSnackbarClose","event","reason","_useState47","_useState48","rowsPerPage","setRowsPerPage","memoizedUrlParameters","useCallback","urlParams","fetchData","axios","get","then","_ref","chartDates","data","map","date","index","d","dateString","spend_ranges","forEach","sr","label","count","impressions_ranges","ir","ad_types","at","noDonationsFound","_ref2","donationData","donations","_ref3","a","spend_range","start_date","end_date","useEffect","Promise","allSettled","result","campaignData","value","dateData","min_date","max_date","_ref4","_ref5","_ref6","catch","setTimeout","_ref7","toggleDrawer","type","key","classes","handleHelpDialogClose","react_default","createElement","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","onKeyDown","Menu_default","Typography","variant","Link","component","RouterLink","to","LinearProgress","Drawer","open","onClose","FormControl","InputLabel","id","Select","labelId","disabled","e","target","onBlur","MenuItem","campaign","name","useUtils_cfb96ac9","utils","MomentUtils","DatePicker","disableToolbar","format","onChange","_d","KeyboardButtonProps","FormControlLabel","control","Checkbox","checked","Button","Divider","TextField","error","newBarSize","helperText","InputLabelProps","shrink","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Grid","container","item","xs","style","Help_default","sm","es6","aspect","top","right","left","bottom","strokeDasharray","dataKey","angle","textAnchor","stackId","stroke","fill","Alert","severity","TableContainer","Paper","Table","table","size","TableHead","TableRow","TableCell","TableBody","slice","ad","scope","impressions_range","href","link","rel","ad_type","TableFooter","TablePagination","rowsPerPageOptions","page","onChangePage","newPage","onChangeRowsPerPage","parseInt","Snackbar","autoHideDuration","App","react_router_dom","basename","hashType","react_router","path","src_Dashboard","elevation","role","src","campaignDataGif","display","height","alt","reviewSageGif","textDecoration","interactGif","fontWeight","es","dataSource","sourceType","screenName","options","username","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.444b4d1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campaign-data.9cc1d394.gif\";","module.exports = __webpack_public_path__ + \"static/media/reviewsage.e80803b4.gif\";","module.exports = __webpack_public_path__ + \"static/media/recording.62d46780.gif\";","import React, { useState, useEffect, useCallback} from 'react'\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinearProgress, DialogTitle, DialogActions, DialogContent, DialogContentText, Dialog, TextField, Link, Drawer, AppBar, Toolbar, IconButton, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox, TableContainer, TableCell, TableHead, TableBody, TableRow, Table, Button, TableFooter, TablePagination, Snackbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Alert from '@material-ui/lab/Alert';\nimport {  Link as RouterLink } from 'react-router-dom';\nimport HelpIcon from '@material-ui/icons/Help';\n\n\nimport {\n  CartesianGrid,\n  XAxis,\n  Label,\n  YAxis,\n  Tooltip,\n  Legend,\n  BarChart,\n  Bar,\n  ResponsiveContainer,\n  Area,\n  ComposedChart,\n} from \"recharts\";\nimport * as d3TimeFormat from 'd3-time-format';\nimport * as d3ScaleChromatic from 'd3-scale-chromatic';\nimport * as d3Scale from 'd3-scale';\nimport Divider from \"@material-ui/core/Divider\";\n\n// Display format function for dates\nconst chartTimeFormat = d3TimeFormat.timeFormat('%m/%d/%y');\n\nconst Dashboard = () => {\n\n  function addDollarSign(spendRange) {\n    const spendRangeSplit = spendRange.split('-');\n    if (spendRangeSplit.length === 1) {\n      // Split it on space, and a dollar sign\n      const secondSplit = spendRangeSplit[0].split(' ');\n      return `${secondSplit[0]} $${secondSplit[1]}`;\n    } else {\n      return `$${spendRangeSplit[0]}-$${spendRangeSplit[1]}`;\n    }\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawer: {\n      width: 250\n    }\n  }));\n\n  const defaultLoadedCampaignName = 'BERNIE 2020';\n  const pickerTimeFormat = d3TimeFormat.timeFormat('%Y-%m-%d');\n  const initialDateString = pickerTimeFormat(new Date());\n  const spendRanges = ['≤ $100', '$100-$1k', '$1k-$50k', '$50k-$100k', '> $100k'];\n  const impressionRanges = ['≤ 10k', '100k-1M', '10k-100k', '1M-10M', '> 10M'];\n  const adTypes = ['Image', 'Text', 'Video'];\n  // Default to loading the previous 2 months of data\n  const monthDelta = 2;\n\n  // Color scale for the ad spend + impression ranges\n  let adSpendImpressionRangeColorScale = d3Scale.scaleOrdinal()\n    .domain(spendRanges).range(d3ScaleChromatic.schemeCategory10);\n  // Color scale fo the ad type area chart\n  let adTypeColorScale = d3Scale.scaleOrdinal()\n    .domain(adTypes).range(d3ScaleChromatic.schemeAccent);\n\n  // Hook, hook, where's the hook!?\n  // This is all presidential campaigns\n  const [presidentialCampaigns, setPresidentialCampaigns] = useState([]);\n  // User selected presidential campaign\n  const [presidentialCampaign, setPresidentialCampaign] = useState('');\n  // User controlled date range\n  const [startDate, setStartDate] = useState(initialDateString);\n  const [endDate, setEndDate] = useState(initialDateString);\n  // These are used to limit date choices on the inputs\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n  // Boolean to show the spend range of ads (as bars)\n  const [showSpendRanges, setShowSpendRanges] = useState(false);\n  // Boolean to show the impression range of ads (as bars)\n  const [showImpressionRanges, setShowImpressionRanges] = useState(false);\n  // Boolean to show ad types (as area)\n  const [showAdTypes, setShowAdTypes] = useState(true);\n  // User-controlled width of bars in bar charts\n  const [barSize, setBarSize] = useState(4);\n  // User selected ad type to display on chart\n  const [adType, setAdType] = useState('');\n  // Ads fetched from Django vv\n  const [ads, setAds] = useState([]);\n  // Current \"page\" of ads to display on details table\n  const [adDetailsPage, setAdDetailsPage] = useState(0);\n  // Boolean to retrieve individual donation data from FEC records\n  const [fetchIndividualDonations, setFetchIndividualDonations] = useState(true);\n  // Boolean to also retrieve ad details for details table\n  const [fetchAdDetails, setFetchAdDetails] = useState(true);\n  // Boolean to control if the success snack bar is shown after fetching data\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  // Boolean to control if the side drawer is open\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  // Boolean to control if the help dialog is displayed\n  const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n  // Array of data to display on the leftmost chart\n  const [dateAdStackedBars, setDateAdStackedBars] = useState([]);\n  // Array of data to display on the rightmost chart\n  const [donationDataStackedBars, setDonationDataStackedBars] = useState(null);\n  // Boolean to indicate that the user has tried to set a bar size that doesn't work, and to show an error msg\n  const [invalidBarSize, setInvalidBarSize] = useState(false);\n  const [noDonations, setNoDonations] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n\n  const handleTableChangePage = (event, newPage) => {\n    setAdDetailsPage(newPage);\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setAdDetailsPage(0);\n  };\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  function validateBarSize(newBarSize) {\n    if (newBarSize < 1 || newBarSize > 13) {\n      setInvalidBarSize(true);\n    } else {\n      setInvalidBarSize(false);\n      setBarSize(newBarSize);\n    }\n  }\n\n  const memoizedUrlParameters = useCallback(\n    () => {\n      let urlParams = `campaign_name=${presidentialCampaign}&start_date=${startDate}&end_date=${endDate}`;\n      if (adType !== '') {\n        urlParams += `&ad_type=${adType}`;\n      }\n      return urlParams;\n    }, [presidentialCampaign, startDate, endDate, adType]);\n\n  function fetchData() {\n    setLoading(true);\n    const urlParams = memoizedUrlParameters();\n    axios.get('https://bernie-ads-backend.herokuapp.com/api/date_ads_metadata/?'+urlParams).then(({ data: adDateData }) => {\n      const chartDates = adDateData.map((date, index) => {\n        let d = {dateString: chartTimeFormat(new Date(date.date))};\n        date.spend_ranges.forEach(sr => {\n          d[addDollarSign(sr.label)] = sr.count;\n        });\n        date.impressions_ranges.forEach(ir => {\n          d[ir.label] = ir.count;\n        });\n        date.ad_types.forEach(at => {\n          d[at.label] = at.count;\n        });\n        return d;\n      });\n      setDateAdStackedBars(chartDates);\n      setSnackbarOpen(true);\n      setDrawerOpen(false);\n      setLoading(false);\n    });\n    if (fetchIndividualDonations) {\n      let noDonationsFound = true;\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/date_donations_metadata/?'+urlParams).then(({ data }) => {\n        const donationData = data.map((d) => {\n          if (d.count > 0) {\n            noDonationsFound = false;\n          }\n          return {dateString: chartTimeFormat(new Date(d.date)), donations: d.count};\n        });\n        setDonationDataStackedBars(donationData);\n        setNoDonations(noDonationsFound);\n      });\n    }\n    if (fetchAdDetails) {\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/ads/?'+urlParams).then(({ data: ads }) => {\n        ads.forEach((a) => {\n          a.spend_range = addDollarSign(a.spend_range);\n          a.start_date = chartTimeFormat(new Date(a.start_date));\n          a.end_date = chartTimeFormat(new Date(a.end_date));\n        });\n        setAds(ads);\n      });\n    }\n  }\n\n  useEffect(() => {\n    // Fetch all presidential campaigns\n    const urlParams = `?month_delta=${monthDelta}`;\n    Promise.allSettled([\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/campaigns/'),\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/date_extent/' + urlParams)\n    ]).then((result) => {\n      const campaignData = result[0].value.data;\n      const dateData = result[1].value.data;\n      setPresidentialCampaigns(campaignData);\n      setPresidentialCampaign(defaultLoadedCampaignName);\n      setMinDate(dateData.min_date);\n      setMaxDate(dateData.max_date);\n      setEndDate(dateData.max_date);\n      setStartDate(dateData.start_date);\n      let urlParams = `campaign_name=${defaultLoadedCampaignName}&start_date=${dateData.start_date}&end_date=${dateData.max_date}`;\n\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/date_ads_metadata/?'+urlParams).then(({ data: adDateData }) => {\n        const chartDates = adDateData.map((date, index) => {\n          let d = {dateString: chartTimeFormat(new Date(date.date))};\n          date.spend_ranges.forEach(sr => {\n            d[addDollarSign(sr.label)] = sr.count;\n          });\n          date.impressions_ranges.forEach(ir => {\n            d[ir.label] = ir.count;\n          });\n          date.ad_types.forEach(at => {\n            d[at.label] = at.count;\n          });\n          return d;\n        });\n        setDateAdStackedBars(chartDates);\n        setSnackbarOpen(true);\n        setDrawerOpen(false);\n        setLoading(false);\n      });\n      let noDonationsFound = true;\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/date_donations_metadata/?'+urlParams).then(({ data }) => {\n        const donationData = data.map((d) => {\n          if (d.count) {\n            noDonationsFound = false;\n          }\n          return {dateString: chartTimeFormat(new Date(d.date)), donations: d.count};\n        });\n        setNoDonations(noDonationsFound);\n        setDonationDataStackedBars(donationData);\n      });\n      axios.get('https://bernie-ads-backend.herokuapp.com/api/ads/?'+urlParams)\n        .then(({ data: ads }) => {\n          ads.forEach((a) => {\n            a.spend_range = addDollarSign(a.spend_range);\n            a.start_date = chartTimeFormat(new Date(a.start_date));\n            a.end_date = chartTimeFormat(new Date(a.end_date));\n          });\n          setAds(ads);\n        })\n        .catch(() => {\n          // It's possible that the request failed because Heroku is waking up. So, wait a few seconds and try again\n          setTimeout(() => {\n            axios.get('https://bernie-ads-backend.herokuapp.com/api/ads/?'+urlParams)\n              .then(({ data: ads }) => {\n                ads.forEach((a) => {\n                  a.spend_range = addDollarSign(a.spend_range);\n                  a.start_date = chartTimeFormat(new Date(a.start_date));\n                  a.end_date = chartTimeFormat(new Date(a.end_date));\n                });\n                setAds(ads);\n              });\n          }, 3000);\n        });\n\n    });\n  },[]);\n\n  const toggleDrawer = () => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const classes = useStyles();\n\n  const sideBar = () => (\n    <div className={classes.drawer}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"presidential-campaign\">Presidential Campaign</InputLabel>\n        <Select\n          labelId=\"presidential-campaign\"\n          value={presidentialCampaign}\n          disabled={!presidentialCampaigns.length}\n          onClick={(e) => setPresidentialCampaign(e.target.value)}\n          onBlur={(e) => setPresidentialCampaign(e.target.value)}\n        >\n          <MenuItem/>\n          {presidentialCampaigns.map(campaign => (\n            <MenuItem key={campaign.name} value={campaign.name}>\n              {campaign.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/DD/YY\"\n            label=\"Start Date\"\n            id=\"start-date-picker-inline\"\n            margin=\"normal\"\n            value={startDate}\n            onChange={(d) => { setStartDate(pickerTimeFormat(d._d)) }}\n            minDate={minDate}\n            maxDate={maxDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/DD/YY\"\n            margin=\"normal\"\n            id=\"end-date-picker-inline\"\n            label=\"End Date\"\n            value={endDate}\n            onChange={(d) => { setEndDate(pickerTimeFormat(d._d)) }}\n            minDate={minDate}\n            maxDate={maxDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"ad-type\">Ad Type</InputLabel>\n        <Select\n          labelId=\"ad-type\"\n          value={adType}\n          disabled={!adTypes.length}\n          onClick={(e) => setAdType(e.target.value)}\n          onChange={(e) => setAdType(e.target.value)}\n          onBlur={(e) => setAdType(e.target.value)}\n        >\n          <MenuItem value=\"\"/>\n          {adTypes.map(adType => (\n            <MenuItem key={adType} value={adType}>\n              {adType}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={fetchIndividualDonations}\n              onClick={(e) => setFetchIndividualDonations(e.target.checked)}\n              onChange={(e) => setFetchIndividualDonations(e.target.checked)}\n              onBlur={(e) => setFetchIndividualDonations(e.target.checked)}\n              color=\"primary\"\n            />\n          }\n          label=\"Retrieve Individual Donations\"\n        />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={fetchAdDetails}\n              onClick={(e) => setFetchAdDetails(e.target.checked)}\n              onChange={(e) => setFetchAdDetails(e.target.checked)}\n              onBlur={(e) => setFetchAdDetails(e.target.checked)}\n              color=\"primary\"\n            />\n          }\n          label=\"Retrieve Ad Details\"\n        />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={fetchData}\n          disabled={!presidentialCampaigns.length}\n        >\n          Submit\n        </Button>\n      </FormControl>\n      <Divider />\n\n      <FormControl className={classes.formControl}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={showSpendRanges}\n              onClick={(e) => setShowSpendRanges(e.target.checked)}\n              onChange={(e) => setShowSpendRanges(e.target.checked)}\n              onBlur={(e) => setShowSpendRanges(e.target.checked)}\n              color=\"primary\"\n            />\n          }\n          label=\"Show Ad Spend\"\n        />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={showAdTypes}\n              onClick={(e) => setShowAdTypes(e.target.checked)}\n              onChange={(e) => setShowAdTypes(e.target.checked)}\n              onBlur={(e) => setShowAdTypes(e.target.checked)}\n              color=\"primary\"\n            />\n          }\n          label=\"Show Ad Types\"\n        />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={showImpressionRanges}\n              onClick={(e) => setShowImpressionRanges(e.target.checked)}\n              onChange={(e) => setShowImpressionRanges(e.target.checked)}\n              onBlur={(e) => setShowImpressionRanges(e.target.checked)}\n              color=\"primary\"\n            />\n          }\n          label=\"Show Ad Impressions\"\n        />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <TextField\n          id=\"chart-bar-width\"\n          label=\"Chart Bar Width\"\n          type=\"number\"\n          error={invalidBarSize}\n          value={barSize}\n          onChange={e => validateBarSize(+e.target.value)}\n          helperText=\"Bar width must be in the range [1, 13]\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </FormControl>\n    </div>\n  );\n\n  function handleHelpDialogClose() {\n    setHelpDialogOpen(false);\n  }\n  function handleHelpDialogOpen() {\n    setHelpDialogOpen(true);\n  }\n\n  const helpDialog = () => (\n    <Dialog\n      fullWidth={true}\n      maxWidth=\"sm\"\n      open={helpDialogOpen}\n      onClose={handleHelpDialogClose}\n      aria-labelledby=\"help-dialog-title\"\n    >\n      <DialogTitle id=\"help-dialog-title\">Ads + Donation Data Tool</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          This tool allows you to visualize publicly available data for several 2020 presidential candidates.\n          <p>You can see how many\n            online ad campaigns each candidate has run on Google over the past several months, each one's price range, impressions target, and ad type (such as text or video).</p>\n          FEC data for individual donations can also be retrieved through Q3 2019. Simply click <MenuIcon/> up top to begin exploring the data!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleHelpDialogClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <div className=\"dashboard\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer()}\n            onKeyDown={toggleDrawer()}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            <Link component={RouterLink} to=\"/\" color=\"inherit\">WebMDee.com</Link>\n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n      { loading ? <LinearProgress /> : ''}\n      <Drawer open={drawerOpen} onClose={toggleDrawer()}>\n        {sideBar()}\n      </Drawer>\n      {helpDialog()}\n      <Grid container>\n        <Grid item xs={2}/>\n        <Grid item xs={8}>\n          <div style={{textAlign: \"center\", margin: \"10px 0 10px 0\"}}>\n            <Typography variant=\"h6\" className={classes.title}>{presidentialCampaign} Ads + Donation Data Tool</Typography>\n          </div>\n        </Grid>\n        <Grid item xs={2}>\n          <div style={{textAlign: \"right\"}}>\n            <IconButton color=\"primary\" onClick={handleHelpDialogOpen}>\n              <HelpIcon/>\n            </IconButton>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {!dateAdStackedBars.length ? (\n            <div>\n              <Alert severity=\"info\">Click \"Submit\" in order to retrieve Google Ads data for the {presidentialCampaign} campaign.</Alert>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" aspect={1.5}>\n              <ComposedChart\n                data={dateAdStackedBars}\n                margin={{\n                  top: 20, right: 30, left: 20, bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <XAxis dataKey=\"dateString\" type=\"category\"/>\n                <YAxis\n                  type=\"number\"\n                >\n                  <Label\n                    value=\"Number Of Ad Campaigns\"\n                    position=\"insideLeft\"\n                    angle={-90}\n                    style={{ textAnchor: 'middle' }}\n                  />\n                </YAxis>\n                {\n                  showAdTypes ? adTypes.map(at => {\n                      return <Area angle={45} textAnchor=\"end\" dataKey={at} stackId=\"ad-type\" type=\"monotone\" key={at} stroke={adTypeColorScale(at)} fill={adTypeColorScale(at)}/>})\n                    : ''\n                }\n                {\n                  showSpendRanges ? spendRanges.map(sr => {\n                    return <Bar dataKey={sr} stackId=\"spend\" key={sr} stroke=\"lightGray\" fill={adSpendImpressionRangeColorScale(sr)} barSize={barSize}/>\n                  }) : ''\n                }\n                {\n                  showImpressionRanges ? impressionRanges.map(ir => {\n                    return <Bar dataKey={ir} stackId=\"impressions\" key={ir} stroke=\"lightGray\" fill={adSpendImpressionRangeColorScale(ir)} barSize={barSize}/>\n                  }) : ''\n                }\n              </ComposedChart>\n            </ResponsiveContainer>\n            )\n          }\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {\n            donationDataStackedBars === null || !fetchIndividualDonations ?\n              (\n                <div>\n                  <Alert severity=\"info\">Check \"Retrieve Individual Donations\" in order to retrieve FEC donation data from individuals for the {presidentialCampaign} campaign.</Alert>\n                </div>\n              )\n              :\n              (\n                fetchIndividualDonations && noDonations ?\n                  (\n                    <Alert severity=\"info\">No data for individual donations to the {presidentialCampaign} campaign from {chartTimeFormat(new Date(startDate))} - {chartTimeFormat(new Date(endDate))}.</Alert>\n                  )\n                  :\n                  (\n                    <ResponsiveContainer width=\"100%\" aspect={1.5}>\n                      <BarChart\n                        data={donationDataStackedBars}\n                        margin={{\n                          top: 20, right: 30, left: 20, bottom: 5,\n                        }}\n                        barSize={barSize}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <Tooltip/>\n                        <Legend/>\n                        <XAxis dataKey=\"dateString\" type=\"category\"/>\n                        <YAxis type=\"number\">\n                          <Label\n                            value=\"Number Of Donations\"\n                            position=\"insideLeft\"\n                            angle={-90}\n                            style={{ textAnchor: 'middle' }}\n                          />\n                        </YAxis>\n                        <Bar dataKey=\"donations\" stroke=\"lightGray\" fill=\"steelblue\"/>\n                      </BarChart>\n                    </ResponsiveContainer>\n                  )\n              )\n          }\n        </Grid>\n        <Grid item xs={12} sm={12} style={{marginTop: \"10px\"}}>\n          { ads.length && fetchAdDetails ? (\n            <TableContainer component={Paper}>\n              <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Start Date</TableCell>\n                    <TableCell>End Date</TableCell>\n                    <TableCell>Spend Range</TableCell>\n                    <TableCell>Impressions Range</TableCell>\n                    <TableCell>Ad Type</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    ads.slice(adDetailsPage * rowsPerPage, adDetailsPage * rowsPerPage + rowsPerPage).map(ad => (\n                      <TableRow key={ad.id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {ad.start_date}\n                        </TableCell>\n                        <TableCell>{ad.end_date}</TableCell>\n                        <TableCell>{ad.spend_range}</TableCell>\n                        <TableCell>{ad.impressions_range}</TableCell>\n                        <TableCell><a href={ad.link} target=\"_blank\" rel=\"noopener noreferrer\">{ad.ad_type}</a></TableCell>\n                      </TableRow>\n                    ))\n                  }\n                </TableBody>\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25, 50]}\n                      rowsPerPage={rowsPerPage}\n                      count={ads.length}\n                      page={adDetailsPage}\n                      onChangePage={handleTableChangePage}\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </TableContainer>\n          ) : (\n            <Alert severity=\"info\">Check \"Retrieve Ad Details\" to display ad details here.</Alert>\n          )\n          }\n        </Grid>\n        <Grid item xs={12}>\n          <div style={{margin: \"10px 0 10px 0\", textAlign: \"center\"}}>Ad data is from Google's <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://transparencyreport.google.com/political-ads/region/US\">Transparency Report</a>, individual donation data is from <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.fec.gov/data/browse-data/?tab=bulk-data\">fec.gov</a></div>\n        </Grid>\n      </Grid>\n      <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\n          {\n            fetchIndividualDonations ?\n              <div>Retrieved ad campaign and individual donation data for {presidentialCampaign} from {chartTimeFormat(new Date(startDate))} - {chartTimeFormat(new Date(endDate))}\n              </div>\n              :\n              <div>Retrieved ad campaign data for {presidentialCampaign} from {chartTimeFormat(new Date(startDate))} - {chartTimeFormat(new Date(endDate))}\n              </div>\n          }\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n\n};\n\nexport default Dashboard;","import React from 'react';\nimport { Grid, Paper, Typography, Divider} from '@material-ui/core';\nimport './App.css'\nimport Dashboard from './Dashboard.js'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Timeline } from 'react-twitter-widgets'\nimport campaignDataGif from './campaign-data.gif';\nimport reviewSageGif from './reviewsage.gif';\nimport interactGif from './recording.gif';\n\nconst App = () => {\n  return (\n    <div>\n      <Router basename=\"/\" hashType=\"slash\">\n        <Switch>\n          <Route path=\"/campaign-data-app\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/\">\n            <Grid container component={Paper} elevation={3} className=\"webmdee-card\">\n              <Grid item xs={12}>\n                <p>Hello there!</p>\n                <p>My name's <span>Mark Dhillon</span>, &amp; I'm an engineer.</p>\n                <p>\n                  <a href=\"https://mdee.s3.us-west-2.amazonaws.com/Mark+Dhillon+C.V..pdf\">C.V.</a>, <a href=\"https://www.github.com/mdee\">GitHub</a>, &amp; <a href=\"https://www.linkedin.com/in/webmdee\">LinkedIn</a>.\n                </p>\n              </Grid>\n            </Grid>\n            <Grid container component={Paper} elevation={3} className=\"webmdee-card\">\n              <Grid item xs={6} style={{textAlign: \"left\"}}>\n                <Typography variant=\"h5\">\n                  Visualizing 2020 Campaign Data\n                </Typography>\n              </Grid>\n              <Grid item xs={6} style={{textAlign: \"right\"}}>\n                <Typography variant=\"h6\">\n                  02/10/20\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <p>\n                  As a way to learn React and refamiliarize myself with Django, I made <Link to=\"/campaign-data-app\">this interactive tool</Link>.\n                </p>\n\n                <p>\n                  It visualizes data from Google's <a href=\"https://transparencyreport.google.com/political-ads/region/US\">Transparency Report on Political Advertising</a>, and also data about invididual donations through Q3 2019 to candidates from <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.fec.gov/data/browse-data/?tab=bulk-data\">fec.gov</a>\n                </p>\n\n                <p>\n                  Why did I do this? For starters, I have long been interested in designing interfaces, and building interactive data visualizations. I used to pretty much exclusively write web apps, but for the past ~5 years I've spent most of my time in embedded code land (alongside some Python & MATLAB).</p>\n                <p>\n                  In fact, back when I was keeping up with web apps, there was a spirited debate about which framework to use: Angular, Ember, or React. At the time, I chose Ember.\n                </p>\n                <p>\n                  I think it's safe to say that React won <span role=\"img\" aria-label=\"haha-emoji\">😂</span>.\n                </p>\n\n                <p>\n                  So, this app came out of a desire to learn something new (React) and play around with some interface design and data visualization (which I am always game for). The data required a bit of preprocessing, but it was a fun challenge that gave me some time with the following:\n                </p>\n\n                <ul>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.djangoproject.com/\">Django</a></li>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.django-rest-framework.org/\">Django REST Framework</a></li>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://recharts.org/\">Recharts</a></li>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://reactjs.org/\">React</a></li>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://material-ui.com/\">Material UI</a></li>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://d3js.org/\">d3</a> (scale, scale-chromatic, time, time-format)</li>\n                  <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.postgresql.org/\">Postgre SQL</a></li>\n                </ul>\n                <p>\n                  In order to get the data manageable for Django, I created models for the ads, donations, and presidential campaigns. Ads belong to a campaign, and donations are also tied to a campaign.\n                </p>\n                <p>The tool allows you to explore how many Google ad campaigns each of the 6 major Democratic candidates have been running this election cycle. Each ad has the following attributes:</p>\n                <ul>\n                  <li>A spend range (less than $100, $100 - $1000, etc.)</li>\n                  <li>An impressions range (10K, 1M, etc.)</li>\n                  <li>A date range during which it was served</li>\n                  <li>The type of ad it was (text, image, video)</li>\n                  <li>A URL to see more details of the ad (including the image / text video) on Google's Transparency Report website</li>\n                </ul>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <div style={{textAlign: 'center'}}>\n                  <img src={campaignDataGif} style={{display: \"block\", maxWidth: \"95%\", height: \"auto\", margin: \"0 auto\"}} alt=\"Recording of campaign data app interaction\"/>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <p>\n                  When I was thinking about the use case for this app, I imagined a campaign employee wanting to compare ad strategies to the competition. If 2 campaigns are competing for the same voters and 1 is leading, what might the other campaign learn from this public data?</p>\n                <p>For fun, I also added in the ability to see individual donations as reported by the FEC. It's interesting to look at ad surges as well as how each campaign runs a different combination of text, image, and video ads.</p>\n                <p>Here's are a few anecdotes:</p>\n                <Divider />\n                <p>Joe Biden announced his campaign for president on 4/25/19. The data shows he immediately began running around ~40 ad campaigns concurrently in the early going, almost all of them inexpensive text ads.\n                  <br/><br/>As the months continued, that number halved until it dropped to 0 on 10/21/19.\n                  <br/><br/>\n                  On 10/24/19, he reversed his earlier position and <a href=\"https://www.cnn.com/2019/10/23/politics/joe-biden-fundraising-super-pac/index.html\">signaled an openness</a> to accepting Super PAC support.\n                  <br/><br/>\n                  <div>On 10/25/19, a Super PAC <a href=\"https://www.cnn.com/2019/10/29/politics/joe-biden-ally-launches-super-pac/index.html\">was formally launched</a> to support him</div>\n                </p>\n                <p>On 11/07/19, <b>106(!)</b> ads began running concurrently, all of them video. He wasn't kidding about using Super PAC dollars!</p>\n                <Divider />\n                <p> Pete Buttigieg has been running <b>a lot</b> of ad campaigns.\n                  <br/><br/>\n                  In the fall he was running hundreds of campaigns concurrently, and once November hit that number steadily rose to more than 1000, which continued for the rest of the year\n                </p>\n                <Divider />\n                <p> Nobody touched Bernie Sanders when it came to individual donations (unsurprisingly)</p>\n                <Divider />\n                <p>\n                  This was fun for me to build. React seems like a powerful way to build highly interactive apps, and I forgot how much fun it can be to build stuff for the web.</p>\n                <p>\n                  In order to get it running online, I deployed the backend code on a free Heroku tier. The front end is packaged up with yarn and then served up via Github Pages.</p>\n                <p>\n                  Here's the source code for the <a href=\"https://github.com/mdee/bernie_backend\">backend</a> & <a href=\"https://github.com/mdee/webmdee-react\">frontend</a>.\n                </p>\n              </Grid>\n            </Grid>\n            <Grid container component={Paper} elevation={3} className=\"webmdee-card\">\n              <Grid item xs={6}>\n                <div style={{textAlign: \"left\"}}>\n                <Typography variant=\"h5\">ReviewSage</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={6}>\n                <div style={{textAlign: \"right\"}}>\n                  <Typography variant=\"h6\">03/04/15</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <p><b>TL;DR</b> Raised $$ for app after graduating, <strike>here's a demo</strike>.</p>\n                <div>\n                  In my final semester before completing a Computer Science Master's degree @ UW Madison, I took a\n                  course taught by Professors Remzi Arpaci-Dusseau and Paul Barford on Software\n                  Entrepreneurship. The purpose of the course was to examine processes and case studies to transform ideas into\n                  successful businesses, as well as to create a working prototype of an idea and present it at the\n                  end of the course.<br/>\n                  At the time, I had been focusing on mining information from text (through\n                  work with Professor Michael Gleicher) and trying to visualize the data with <a\n                    href=\"http://d3js.org/\">D3</a>. That work, combined with the class project lead me to create\n                  ReviewSage.<br/>\n                  <p><b>ReviewSage was made to harness the wisdom trapped in Yelp reviews, quickly.</b></p>\n                  I worked on hard on the prototype, and my efforts were rewarded with a rare opportunity: Great\n                  Oaks Venture Capital was willing to provide me with some seed funding to develop ReviewSage into a\n                  business. You can play around with a representative version <strike>here</strike>,\n                  or watch the animation to get the gist.<br/>\n                  The <strike>live app</strike> demonstrates\n                  what ReviewSage was originally intended for: giving consumers quick answers about Yelp reviews.\n                  After submitting a URL, ReviewSage looks for commonly used phrases and shows you the spread of\n                  ratings when people use those phrases.\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <div style={{textAlign: 'center'}}>\n                  <img src={reviewSageGif} style={{display: \"block\", maxWidth: \"100%\", height: \"auto\", margin: \"0 auto\"}} alt=\"Recording of ReviewSage app interaction\"/>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <div>\n                  <p>At the time, I was preparing to join a start-up somewhere in CA. Then I got a message from\n                    Professor Barford saying that I could start my own.</p>\n                  <p><b>Getting $$ to start a business around my idea was too tempting to pass up.</b></p>\n                  After incorporating the business, I decided to position it as a B2B app: businesses could use my\n                  software to keep up with their online presence. That seemed like a good idea at the time.\n                  In the end, it didn't work out. However, I'm very pleased with the experience I gained from\n                  taking on such a challenge. I spent 1.5 years chasing this dream, and I think I came out\n                  ahead.\n                  <p>\n                  I was able to take a project that I cared about and raise seed funding to start a business. I\n                  received a lot of great guidance from my Professors, as well as Andy Boszhardt and John\n                    Philosophos from Great Oaks.</p>\n                  I was able to hire an engineer to work with me, and his experience helped him secure a job at a\n                  premier start-up in Madison now. I was able to get the largest restaurant group in Madison to\n                  become a beta tester and eventually a paying customer, and also raised a subsequent round.\n                  ReviewSage even got some <a href=\"http://www.isthmus.com/isthmus/article.php?article=41117\">local press</a>.\n                  <p>Things don't always work out the way you hope. But that's ok; life's too short to dwell on the\n                    past. The future? Now that's exciting.</p>\n                </div>\n              </Grid>\n            </Grid>\n            <Grid container component={Paper} elevation={3} className=\"webmdee-card\">\n              <Grid item xs={6}>\n                <div style={{textAlign: \"left\"}}>\n                  <Typography variant=\"h5\">Expense Logging</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={6}>\n                <div style={{textAlign: \"right\"}}>\n                  <Typography variant=\"h6\">01/15/15</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <p>\n                  I recently found out about <a href=\"http://interactjs.io/\">interact.js</a> and came away very impressed.\n                  You might even say that my <a href=\"https://www.youtube.com/watch?v=k4t8KisRznQ\">mind was blown</a>.\n                </p>\n                <div>It's a fantastic Javascript libary which takes away <span\n                  style={{textDecoration: \"line-through\"}}>a lot</span> all of the pain for drag-and-drop, resizing, and\n                  multi-touch gestures (all with <a href=\"https://www.youtube.com/watch?v=7COUk5eh6jY\">inertia</a>) for\n                  browsers over IE8. That's huge!\n                </div>\n                <p>\n                  <b>In the endless debate over developing web vs native, <a\n                    href=\"http://interactjs.io/\">interact.js</a> is a panacea for web apps to support gestures and\n                    touch-screen interactions.\n                  </b>\n                </p>\n                <div>\n                  Most of the time when I see a new library spring up, I'll leave it open in a tab or maybe even\n                  bookmark it to check later (if it seems cool, of course). Not this time. This time I wanted to\n                  start using the new hotness right away. I had just come out of my first start-up (relatively) unscathed, and as a consequence of that\n                  experience I was regularly tracking my expenses to see where my money was going.</div>\n                <p>Along the way, I kicked around ideas about what I'd like to see from an expense tracking app, and\n                  once I saw <a href=\"http://interactjs.io/\">interact.js</a>, I decided to make it happen. You can see a\n                  gif of the finished product on this page, or <strike>play around with it\n                    yourself</strike>.</p>\n\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <div style={{textAlign: 'center'}}>\n                  <img src={interactGif} style={{display: \"block\", maxWidth: \"100%\", height: \"auto\", margin: \"0 auto\"}} alt=\"Recording of expense management app interaction\"/>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <p>The app uses localStorage to keep track of what you've entered after you close\n                  it, and also supports generating an email of your data in CSV form. That means any data you enter <b>lives\n                    on your device alone</b>, but supports exporting if you feel so inclined.</p>\n                <p>I ended up using a few different gestures from interact.js:</p>\n                <ul style={{fontWeight: 300, margin: \"10px\"}}>\n                  <li><b>Double-tapping</b> to minimize a new expense so it can dragged to the proper account.</li>\n                  <li><b>Dragging</b> a new expense into the proper account.</li>\n                  <li><b>Pressing and holding</b> a new expense to toggle between showing a place to describe the\n                    transaction (e.g. 'Coffee')\n                  </li>\n                </ul>\n                <p><b>I'd recommend interact.js for anybody wanting to integrate gestures for a web-app.</b>\n                </p>\n                <p>The examples and API documentation are all solid; it only took me a couple hours to get the gestures\n                  that I wanted working consistently.</p>\n                <p>Since it's a relatively new library, there's not a whole lot of answers online if something doesn't\n                  work as expected. Sometimes though, it's nice not having Stack Overflow as a crutch.</p>\n              </Grid>\n            </Grid>\n            <Grid container component={Paper} elevation={3} className=\"webmdee-card\">\n              <Grid item xs={6}>\n                <div style={{textAlign: \"left\"}}>\n                  <Typography variant=\"h5\">Gary Busey Clips + Twitter</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={6}>\n                <div style={{textAlign: \"right\"}}>\n                  <Typography variant=\"h6\">01/13/15</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <p>\n                  Gary Busey is an <a href=\"http://en.wikipedia.org/wiki/Gary_Busey#Awards_and_nominations\">accomplished actor</a>, and also seems to be a <a href=\"https://www.youtube.com/watch?v=TkYt0unokRM\">funny guy</a>.\n                  I haven't kept up with any of his later career, beyond knowing that he's done some reality TV shows and sells \"<a href=\"http://garybusey.com/gary_busey_buseyisms.html\">Busey-isms</a>\" online.\n                </p>\n                <p>\n                  I have, however, seen him act in quite a few movies, and I'm pretty sure that I enjoyed his roles. Point Break, Black Sheep…those are all good in my book. His recent TV commericals for Amazon also make me laugh a lot.</p>\n                <p>One day, I decided to look up clips of his movie roles on YouTube. It turns out that there are a lot of them, and the prevailing reason for that seems to be that the uploaders find these clips hilarious, weird, or both.</p>\n                <p><b>So there are a bunch of goofy clips available on the internet, and Twitter is a thing so...yes, that's right. Let's make a Twitter bot to spread the Gospel of Gary (Busey).</b></p>\n                <p><a href=\"http://twitter.com/buseybot\">BuseyBot</a> is a Django app using <a href=\"https://github.com/tweepy/tweepy\">tweepy</a>. At different times of day, it looks for folks talking about Gary Busey and sends one of them a juicy Busey movie clip.</p>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <div>\n                  <Timeline\n                    dataSource={{\n                      sourceType: 'profile',\n                      screenName: 'buseybot'\n                    }}\n                    options={{\n                      username: 'UniversalSerialBusey',\n                      height: '450'\n                    }}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}